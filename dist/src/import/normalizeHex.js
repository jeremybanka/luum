"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BASE_16_CHAR_SET = `[a-fA-F0-9]+`;
const miniHexToHex = (miniHex) => {
    const miniHexArray = miniHex.split(``);
    const hexTemplate = [0, 0, 1, 1, 2, 2];
    return hexTemplate.map((idx) => miniHexArray[idx]).join(``);
};
const normalizeHex = (maybeHex) => {
    const hex = maybeHex.replace(/^#/, ``);
    const hexIsCorrectLength = hex.length === 6 || hex.length === 3;
    const hexIsCorrectCharSet = hex.match(new RegExp(`^${BASE_16_CHAR_SET}$`)) !== null;
    const hexIsValid = hexIsCorrectLength && hexIsCorrectCharSet;
    if (!hexIsValid) {
        throw new Error(`${maybeHex} is not a valid hex code`);
    }
    if (hex.length === 3) {
        return miniHexToHex(hex);
    }
    return hex;
};
exports.default = normalizeHex;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9ybWFsaXplSGV4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2ltcG9ydC9ub3JtYWxpemVIZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxNQUFNLGdCQUFnQixHQUFHLGNBQWMsQ0FBQTtBQUV2QyxNQUFNLFlBQVksR0FBRyxDQUFDLE9BQWUsRUFBTyxFQUFFO0lBQzVDLE1BQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUE7SUFDdEMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBO0lBQ3RDLE9BQU8sV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFBO0FBQzdELENBQUMsQ0FBQTtBQUVELE1BQU0sWUFBWSxHQUFHLENBQUMsUUFBZ0IsRUFBTyxFQUFFO0lBQzdDLE1BQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFBO0lBQ3RDLE1BQU0sa0JBQWtCLEdBQUcsR0FBRyxDQUFDLE1BQU0sS0FBSyxDQUFDLElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUE7SUFDL0QsTUFBTSxtQkFBbUIsR0FDdkIsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLE1BQU0sQ0FBQyxJQUFJLGdCQUFnQixHQUFHLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQTtJQUN6RCxNQUFNLFVBQVUsR0FBRyxrQkFBa0IsSUFBSSxtQkFBbUIsQ0FBQTtJQUM1RCxJQUFJLENBQUMsVUFBVSxFQUFFO1FBQ2YsTUFBTSxJQUFJLEtBQUssQ0FBQyxHQUFHLFFBQVEsMEJBQTBCLENBQUMsQ0FBQTtLQUN2RDtJQUNELElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDcEIsT0FBTyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUE7S0FDekI7SUFDRCxPQUFPLEdBQUcsQ0FBQTtBQUNaLENBQUMsQ0FBQTtBQUVELGtCQUFlLFlBQVksQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgSGV4IH0gZnJvbSBcIn5cIlxuXG5jb25zdCBCQVNFXzE2X0NIQVJfU0VUID0gYFthLWZBLUYwLTldK2BcblxuY29uc3QgbWluaUhleFRvSGV4ID0gKG1pbmlIZXg6IHN0cmluZyk6IEhleCA9PiB7XG4gIGNvbnN0IG1pbmlIZXhBcnJheSA9IG1pbmlIZXguc3BsaXQoYGApXG4gIGNvbnN0IGhleFRlbXBsYXRlID0gWzAsIDAsIDEsIDEsIDIsIDJdXG4gIHJldHVybiBoZXhUZW1wbGF0ZS5tYXAoKGlkeCkgPT4gbWluaUhleEFycmF5W2lkeF0pLmpvaW4oYGApXG59XG5cbmNvbnN0IG5vcm1hbGl6ZUhleCA9IChtYXliZUhleDogc3RyaW5nKTogSGV4ID0+IHtcbiAgY29uc3QgaGV4ID0gbWF5YmVIZXgucmVwbGFjZSgvXiMvLCBgYClcbiAgY29uc3QgaGV4SXNDb3JyZWN0TGVuZ3RoID0gaGV4Lmxlbmd0aCA9PT0gNiB8fCBoZXgubGVuZ3RoID09PSAzXG4gIGNvbnN0IGhleElzQ29ycmVjdENoYXJTZXQgPVxuICAgIGhleC5tYXRjaChuZXcgUmVnRXhwKGBeJHtCQVNFXzE2X0NIQVJfU0VUfSRgKSkgIT09IG51bGxcbiAgY29uc3QgaGV4SXNWYWxpZCA9IGhleElzQ29ycmVjdExlbmd0aCAmJiBoZXhJc0NvcnJlY3RDaGFyU2V0XG4gIGlmICghaGV4SXNWYWxpZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHttYXliZUhleH0gaXMgbm90IGEgdmFsaWQgaGV4IGNvZGVgKVxuICB9XG4gIGlmIChoZXgubGVuZ3RoID09PSAzKSB7XG4gICAgcmV0dXJuIG1pbmlIZXhUb0hleChoZXgpXG4gIH1cbiAgcmV0dXJuIGhleFxufVxuXG5leHBvcnQgZGVmYXVsdCBub3JtYWxpemVIZXhcbiJdfQ==