{
  "version": 3,
  "sources": ["../src/constants/index.ts", "../src/constants/filters.ts", "../src/constants/schemes.ts", "../src/export/channelsToHex.ts", "../src/utils/clamp.ts", "../src/utils/interpolate.ts", "../src/utils/wrapAround.ts", "../src/import/hueToRelativeChannels.ts", "../src/solveFor/hueFromChannels.ts", "../src/solveFor/lumFromChannels.ts", "../src/solveFor/maxSatForHueInFilter.ts", "../src/solveFor/satFromChannels.ts", "../src/solveFor/specificLumFromHue.ts", "../src/export/specToChannelsFixLimit.ts", "../src/export/specToHexFixLimit.ts", "../src/export/specToHex.ts", "../src/identify/hue.ts", "../src/import/channelsToSpec.ts", "../src/import/normalizeHex.ts", "../src/import/hexToChannels.ts", "../src/import/hexToSpec.ts", "../src/mixers/contrast.ts", "../src/mixers/hue.ts", "../src/mixers/lum.ts", "../src/mixers/sat.ts", "../src/mixers/index.ts", "../src/scheme/export.ts", "../src/constants/spec.ts", "../src/utils/mapObject.ts", "../src/scheme/import.ts"],
  "sourcesContent": ["export const HUE_STRUCTURES = {\n  none: [],\n  polar: [180],\n  split: [150, 210],\n  trine: [120, 240],\n  square: [90, 180, 270],\n}\nexport const CHANNEL_SPECIFIC_LUM = {\n  R: 0.3,\n  G: 0.5,\n  B: 0.2,\n}\n/*\nconst I'M_WONDERING_IF_THIS_IS_NOT_VERY_ACCURATE = {\n  R: 0.2126,\n  G: 0.7152,\n  B: 0.0722,\n}\n*/\n", "import type { Filter } from \"~\"\n\nexport const unfiltered: Filter = [\n  { sat: 255, hue: 0 },\n  { sat: 255, hue: 360 },\n]\nexport const CMYK: Filter = [\n  { sat: 255, hue: 55 },\n  { sat: 127, hue: 120 },\n  { sat: 255, hue: 200 },\n  { sat: 255, hue: 205 },\n  { sat: 170, hue: 240 },\n  { sat: 230, hue: 270 },\n  { sat: 210, hue: 300 },\n  { sat: 255, hue: 320 },\n]\n", "export const UI = {\n  state: {\n    hover: {},\n    active: {},\n    disabled: {},\n  },\n  bg: {\n    shade: 24,\n    state: {\n      base: {},\n      hover: { shade: 18 },\n      active: { shade: 32 },\n      disabled: { shade: 32 },\n    },\n  },\n  mg: {\n    shade: 48,\n  },\n  fg: {\n    contrast: `soft`,\n    state: {\n      hover: { contrast: `harden` },\n      active: { contrast: `harden` },\n      disabled: { shade: 20 },\n    },\n  },\n}\n\n// Example:\n/* ```\n[\n  [<component-name>, {\n    'rootColor': [],\n    'variables': [],\n    'children': [<recurse>]\n  }],\n  []\n]\n\n// transforms: shade, tint, contrast, sat, lum, hue\n\n```\n*/\n\nexport const trifactory = {\n  PaletteModule: {\n    contextColor: [{ resetColor: `#fee` }, { shade: 20 }],\n    /*\n    // NOTE: These state changes are localized to the current\n    // object, and have no impact on children.\n    states: {\n      hover: [{tint: 10}, {shade: 22}],\n    },\n    */\n    // NOTE: these variables get included into each child\n    // as ex-<variable-name>\n    variables: {\n      bg: [],\n      mg: [{ resetColor: 1 }, { shade: 10 }],\n      fg: [{ contrast: `soft` }],\n    },\n    children: {\n      Control: {\n        // NOTE: All these colors start with the contextColor\n        // and not with the ex-color from parent\n        states: {\n          base: {},\n          hover: [{ tint: 12 }],\n          active: [{ shade: 18 }],\n        },\n        variables: {\n          bg: [{ shade: 24 }],\n          mg: [{ shade: 48 }],\n          fg: {\n            // NOTE: All these colors start with a context of the\n            // existing state of the parent.\n            states: {\n              base: [{ shade: 24 }, { contrast: `soft` }],\n              hover: [{ shade: 24 }, { contrast: `soft` }],\n              active: [{ shade: 24 }, { contrast: `hard` }],\n            },\n          },\n        },\n      },\n    },\n  },\n}\n\n// color scheme  ->           = CSS stylesheet\n// color palette -> component = CSS scope\n// color element -> role      = CSS variable\n// color state   ->             CSS pseudo-class\n\n// factored ops -> nested hex lists -> compiled form (CSS)\n// scheme       -> palette set      -> package\n\n// ops\n// _ PaletteName   // use\n// _ transformation\n// _ input > state\n// _ el\n\n/* scheme\n\n*/\n\n// palettes\nexport const palettes = [\n  {\n    id: `PaletteName`,\n    hex: `#f00`,\n    states: [\n      {\n        id: `base`,\n        hex: `#f00`,\n        elements: [\n          { id: `bg`, hex: `#f00` },\n          { id: `mg`, hex: `#f00` },\n          { id: `fg`, hex: `#f00` },\n        ],\n      },\n      {\n        id: `hover`,\n        hex: `#f00`,\n        elements: [\n          { id: `bg`, hex: `#f00` },\n          { id: `mg`, hex: `#f00` },\n          { id: `fg`, hex: `#f00` },\n        ],\n      },\n    ],\n  },\n]\n\n/*\nconst colorSchema = {\n  exfg: colorContext.softContrast,\n  exbg: hex,\n  fg: {\n    base: colorContext.softContrast,\n    hover: colorContext.softContrast,\n    active: colorContext.hardContrast,\n    disable: a,\n  },\n  mg: [20, 15, 25].map(n => shade(n)),\n  bg: [10, 5, 15].map(n => shade(n)),\n}\n\nconst stylesheet = `\na\n`\n*/\n", "import type { ChannelObject, Hex } from \"~\"\n\nconst channelsToHex = (channels: ChannelObject): Hex =>\n  `#${Object.values(channels)\n    .map((channel) => {\n      let channelHex = channel.toString(16)\n      if (channelHex.length === 1) channelHex = 0 + channelHex\n      return channelHex\n    })\n    .join(``)}`\n\nexport default channelsToHex\n", "type Clamp = (value: number, [min, max]: [number, number]) => number\n\nconst clamp: Clamp = (value, [min, max]) =>\n  value > max ? max : value < min ? min : value\n\nexport default clamp\n", "import type { Fraction } from \"~\"\n\ntype Interpolate = (args: {\n  completionRatio: Fraction\n  range: [to: number, from: number]\n}) => number\n\nconst interpolate: Interpolate = ({\n  completionRatio = 0.5,\n  range: [to, from],\n}) => {\n  const value = from + completionRatio * (to - from)\n  /*\n  console.log('||| to', to, 'from', from)\n  console.log(\"||| completionRatio\", completionRatio)\n  console.log(\"||| value\", value)\n  */\n  return value\n}\n\nexport default interpolate\n", "const wrapAround = (value: number, [min, max]: [number, number]): number => {\n  const range = max - min\n  while (value >= max) value -= range\n  while (value < min) value += range\n  return value\n}\n\nexport default wrapAround\n", "import type { Degree, Fraction } from \"~\"\n\nimport { wrapAround } from \"../utils\"\n\n/*eslint-disable max-len */\n/**\n * Gives us the relative values of the channels,\n * irrespective of the white light beneath them.\n * @param {number} hue - in degrees. Gets safely wrapped around first thing.\n *\n * Digital Red      0 ->   0\n *\n * Sunlight         50 ->  50\n *\n * Digital Yellow   60 ->  60\n *\n * Citron           70 ->  70\n *\n * Turquoise        510 -> 150\n *\n * @const {number} hueReduced - hue 0-359.9 is now a floating point 0-5.999.\n *\n * Digital Red    0 ->   0  ~  0.000\n *\n * Sunlight       50 -> 5/6  ~  0.833\n *\n * Digital Yellow 60 ->   1  ~  1.000\n *\n * Citron         70 -> 7/6  ~  1.167\n *\n * Turquoise      150 -> 5/2  ~  2.500\n *\n * @const {number} hueInteger - from 1-6. Tells us what color region we are in.\n *\n * Digital Red    0.000 -> 0\n *                : red-into-yellow region\n *\n * Sunlight       0.833 -> 0\n *                : red-into-yellow region\n *\n * Digital Yellow 1.000 -> 1\n *                : yellow-into-green region\n *\n * Citron         1.167 -> 1\n *                : yellow-into-green region\n *\n * Turquoise      2.500 -> 2\n *                : green-into-cyan region\n *\n * hueInteger is the 'whole number' piece of hueReduced.\n * FYI, the six color regions are bounded by red, yellow, green, cyan, blue, magenta.\n *\n * @const {number} hueDecimal - tells where we are in this region.\n *\n * Digital Red    0.000 -> 0.000\n *                : at the very beginning\n *\n * Sunlight       0.833 -> 0.833\n *                : near the end\n *\n * Digital Yellow 1.000 -> 0.000\n *                : at the very beginning\n *\n * Citron         1.167 -> 0.167\n *                : near the beginning\n *\n * Turquoise      2.500 -> 0.500\n *                : at the halfway point\n *\n * hueDecimal is the 'fraction' piece of hueReduced.\n * we are going to use this number to determine the value of the in-between channel.\n *\n * @const {number} x - used in primary-secondary transitions like Red into Yellow\n * @const {number} y - used in secondary-primary transitions like Yellow into Green\n * To understand the function of x and y, take the difference between\n *\n * Sunlight       (hue 50),\n * Citron         (hue 70),\n * Digital Yellow (hue 60),\n *\n * as an instructive case. These colors are all basically yellow.\n *\n * Sunlight is hue 50, which puts it near the end of the red-into-yellow region.\n *\n * This means its Red channel is full, and its Green channel is almost full.\n * The fullness of its Green channel is directly proportional to its\n * hueDecimal, the distance from the beginning of this region: 0.833\n *\n * Citron is hue 70, which puts it near the beginning of the yellow-into-green region.\n *\n * This means its Red channel is ALMOST FULL, and its Green channel is FULL.\n * So the fullness of its Red channel is INVERSELY proportional to its\n * hueDecimal, the distance from the beginning of this region: 1 - 0.167 = 0.833\n *\n * Digital Yellow is hue 60, which puts it at the very beginning of the yellow-into-green region.\n *\n * This means its Red Channel and its Green channel must both be full.\n * Like Citron, the fullness of Digital Yellow's Red channel is inversely proportional to its\n * hueDecimal, which is 0. Therefore Digital Yellow's Red channel has a fullness of 1.\n *\n * @returns array of values reflecting the spread between channels\n *\n * Digital Red    case 0:  [   R ===== 1       G = x = 0.000   B ===== 0      ]\n *\n * Sunlight       case 0:  [   R ===== 1       G = x = 0.833   B ===== 0      ]\n *\n * DigitalYellow  case 1:  [   R = y = 1.000   G ===== 1       B ===== 0      ]\n *\n * Citron         case 1:  [   R = y = 0.833   G ===== 1       B ===== 0      ]\n *\n * Turquoise      case 2:  [   R ===== 0       G ===== 1       B = x = 0.500  ]\n *\n * here we see detailed breakdowns of the function's final output for our running examples.\n */\n/* eslint-enable max-len */\nexport default (hue: Degree): [r: Fraction, g: Fraction, b: Fraction] => {\n  hue = wrapAround(hue, [0, 360])\n  const hueReduced = hue / 60\n  const hueInteger = Math.floor(hueReduced)\n  const hueDecimal = hueReduced - hueInteger\n  const x = hueDecimal\n  const y = 1 - hueDecimal\n  switch (hueInteger) {\n    /* eslint-disable prettier/prettier */\n    case 0: return [1, x, 0]\n    case 1: return [y, 1, 0]\n    case 2: return [0, 1, x]\n    case 3: return [0, y, 1]\n    case 4: return [x, 0, 1]\n    case 5: return [1, 0, y]\n    default: throw new Error(`invalid hue served: ${hue}`)\n    /* eslint-enable prettier/prettier */\n  }\n}\n", "import type { ChannelObject } from \"~\"\n\nconst hueFromChannels = ({ R, G, B }: ChannelObject): number => {\n  let hue = 0\n  if (R > G && G >= B) hue = 60 * (0 + (G - B) / (R - B))\n  if (G >= R && R > B) hue = 60 * (2 - (R - B) / (G - B))\n  if (G > B && B >= R) hue = 60 * (2 + (B - R) / (G - R))\n  if (B >= G && G > R) hue = 60 * (4 - (G - R) / (B - R))\n  if (B > R && R >= G) hue = 60 * (4 + (R - G) / (B - G))\n  if (R >= B && B > G) hue = 60 * (6 - (B - G) / (R - G))\n  return hue\n}\n\nexport default hueFromChannels\n", "import type { ChannelObject } from \"~\"\n\nimport { CHANNEL_SPECIFIC_LUM } from \"../constants\"\n\nconst lumFromChannels = ({ R, G, B }: ChannelObject): number => {\n  const lum =\n    (CHANNEL_SPECIFIC_LUM.R * R) / 255 +\n    (CHANNEL_SPECIFIC_LUM.G * G) / 255 +\n    (CHANNEL_SPECIFIC_LUM.B * B) / 255\n  // console.log('||| found lum', lum)\n  return lum\n}\n\nexport default lumFromChannels\n", "import type { Filter, Degree } from \"~\"\n\nimport { wrapAround } from \"../utils\"\n\nexport default (hue: Degree, filter: Filter): number => {\n  // 430\n  let maxSat = 255\n  const hueWrapped = wrapAround(hue, [0, 360]) // 70\n  for (let a = -1, b = 0; b < filter.length; a++, b++) {\n    a = wrapAround(a, [0, filter.length])\n    // console.log('||| a =', a, 'b =', b)\n    const hueDoubleWrapped =\n      a > b ? wrapAround(hueWrapped, [-180, 180]) : undefined // undef\n    const tuningPointA = filter[a]\n    const tuningPointB = filter[b]\n    const hueA =\n      a > b ? wrapAround(tuningPointA.hue, [-180, 180]) : tuningPointA.hue\n    const hueB = tuningPointB.hue\n    if (\n      (hueDoubleWrapped || hueWrapped) >= hueA &&\n      (hueDoubleWrapped || hueWrapped) < hueB\n    ) {\n      // console.log(\n      //   '||| hue', hue, 'between', tuningPointA.hue, 'and', tuningPointB.hue\n      // )\n      let $ = hueDoubleWrapped || hueWrapped // 70\n      $ -= hueA // 70 - 50 = 20 //\n      $ /= hueB - hueA // 20 / (120 - 50) = 2/7\n      $ *= tuningPointB.sat - tuningPointA.sat // -128 * 2 / 7 = -256 / 7 ~= -37\n      $ += tuningPointA.sat\n      Math.round($)\n      // console.log('||| _', _)\n      maxSat = $\n    }\n  }\n  // console.log('--- maxSat', maxSat)\n  return maxSat\n}\n", "import type { ChannelObject } from \"~\"\n\nconst satFromChannels = ({ R, G, B }: ChannelObject): number => {\n  const sat = Math.max(R, G, B) - Math.min(R, G, B)\n  // console.log('||| found sat', sat)\n  return sat\n}\n\nexport default satFromChannels\n", "import { CHANNEL_SPECIFIC_LUM } from \"../constants\"\nimport hueToRelativeChannels from \"../import/hueToRelativeChannels\"\n\nexport default (hue: number): number => {\n  const [factorR, factorG, factorB] = hueToRelativeChannels(hue)\n\n  const lumR = CHANNEL_SPECIFIC_LUM.R * factorR\n  const lumG = CHANNEL_SPECIFIC_LUM.G * factorG\n  const lumB = CHANNEL_SPECIFIC_LUM.B * factorB\n\n  const specificLum = lumR + lumG + lumB\n\n  return specificLum\n}\n", "import type {\n  ChannelObject,\n  Degree,\n  Filter,\n  Fraction,\n  LuumSpec,\n  OutOf255,\n  Range,\n} from \"~\"\n\nimport { unfiltered } from \"../constants/filters\"\nimport hueToRelativeChannels from \"../import/hueToRelativeChannels\"\nimport {\n  lumFromChannels,\n  specificLumFromHue,\n  maxSatForHueInFilter,\n} from \"../solveFor\"\nimport { clamp } from \"../utils\"\n\nconst minChannelsForSaturationFromHue = (hue: Degree) => {\n  const relativeChannels = hueToRelativeChannels(hue)\n  const channelSpreader = (trueSaturation: OutOf255): ChannelObject => {\n    const makeMinChannel = (idx: number) =>\n      Math.round(relativeChannels[idx] * trueSaturation)\n    return {\n      R: makeMinChannel(0),\n      G: makeMinChannel(1),\n      B: makeMinChannel(2),\n    }\n  }\n  return channelSpreader\n}\n\ntype IlluminationObj = {\n  minChannels: ChannelObject\n  trueLuminosity: number\n  minLum: number\n}\n\nconst channelsFromIlluminationObj = ({\n  minChannels,\n  trueLuminosity,\n  minLum,\n}: IlluminationObj): ChannelObject => {\n  const { max, round } = Math\n  const maxWhite = 255 - max(...Object.values(minChannels))\n  const white = clamp(round((trueLuminosity - minLum) * 255), [0, maxWhite])\n  const channels = {\n    R: minChannels.R + white,\n    G: minChannels.G + white,\n    B: minChannels.B + white,\n  }\n  return channels\n}\n\ntype SpecToChannelsFixLimit = (\n  spec: LuumSpec,\n  filter?: Filter\n) => {\n  channels: ChannelObject\n  fix: { sat: number; lum: number }\n  limit: { sat: Range; lum: Range }\n}\n\nconst specToChannelsFixLimit: SpecToChannelsFixLimit = (\n  { hue, sat, lum, prefer = `lum` },\n  filter = unfiltered\n) => {\n  const minChannelsForSaturation = minChannelsForSaturationFromHue(hue)\n\n  let trueSaturation: OutOf255\n  let trueLuminosity: Fraction\n  let minChannels: ChannelObject\n  let maxChannels: ChannelObject\n  let specificLum: Fraction\n  let minLum = 0\n  let maxLum = 1\n  let maxSat = maxSatForHueInFilter(hue, filter)\n\n  switch (prefer) {\n    case `sat`:\n      trueSaturation = clamp(Math.min(sat, maxSat), [0, 255])\n      minChannels = minChannelsForSaturation(trueSaturation)\n      maxChannels = {\n        R: minChannels.R + 255 - trueSaturation,\n        G: minChannels.G + 255 - trueSaturation,\n        B: minChannels.B + 255 - trueSaturation,\n      }\n      minLum = lumFromChannels(minChannels)\n      maxLum = lumFromChannels(maxChannels)\n      trueLuminosity = clamp(lum, [minLum, maxLum])\n\n      break\n    case `lum`:\n      trueLuminosity = clamp(lum, [0, 1])\n      specificLum = specificLumFromHue(hue)\n      maxSat = Math.min(\n        maxSat,\n        Math.round(\n          trueLuminosity <= specificLum\n            ? 255 * (trueLuminosity / specificLum)\n            : (255 * (1 - trueLuminosity)) / (1 - specificLum)\n        )\n      )\n      trueSaturation = Math.min(sat, maxSat)\n      minChannels = minChannelsForSaturation(trueSaturation)\n      minLum = lumFromChannels(minChannels)\n      break\n  }\n\n  const channels = channelsFromIlluminationObj({\n    minChannels,\n    trueLuminosity,\n    minLum,\n  })\n\n  return {\n    channels,\n    fix: {\n      sat: trueSaturation,\n      lum: trueLuminosity,\n    },\n    limit: {\n      sat: [0, maxSat],\n      lum: [prefer === `lum` ? 0 : minLum, maxLum],\n    },\n  }\n}\n\nexport default specToChannelsFixLimit\n", "import type { Filter, Hex, LuumFix, LuumLimit, LuumSpec } from \"~\"\n\nimport channelsToHex from \"./channelsToHex\"\nimport specToChannels from \"./specToChannelsFixLimit\"\n\ntype SpecToHexFixLimit = (\n  spec: LuumSpec,\n  filter?: Filter\n) => {\n  hex: Hex\n  fix: LuumFix\n  limit: LuumLimit\n}\n\nconst specToHexFixLimit: SpecToHexFixLimit = (\n  { hue, sat, lum, prefer },\n  filter\n) => {\n  const { channels, fix, limit } = specToChannels(\n    {\n      hue,\n      sat,\n      lum,\n      prefer,\n    },\n    filter\n  )\n  const { R, G, B } = channels\n  const hex = channelsToHex({ R, G, B })\n\n  // console.log('--- newHex', hex)\n\n  return { hex, fix, limit }\n}\n\nexport default specToHexFixLimit\n", "import type { Filter, Hex, LuumSpec } from \"~\"\n\nimport specToHexFixLimit from \"./specToHexFixLimit\"\n\nconst specToHex = (\n  { hue, sat, lum, prefer }: LuumSpec,\n  filter?: Filter\n): Hex => {\n  const { hex } = specToHexFixLimit({ hue, sat, lum, prefer }, filter)\n  return hex\n}\n\nexport default specToHex\n", "import type { Degree } from \"~\"\n\nimport { wrapAround } from \"../utils\"\n\ntype NamingPoint = { hue: Degree; name: string }\n\nconst rangeNames: NamingPoint[] = [\n  { hue: 20, name: `red` },\n  { hue: 45, name: `orange` },\n  { hue: 61, name: `yellow` },\n  { hue: 80, name: `citron` },\n  { hue: 100, name: `lime` },\n  { hue: 150, name: `green` },\n  { hue: 180, name: `teal` },\n  { hue: 200, name: `cyan` },\n  { hue: 240, name: `blue` },\n  { hue: 270, name: `indigo` },\n  { hue: 300, name: `violet` },\n  { hue: 330, name: `magenta` },\n  { hue: 350, name: `pink` },\n]\n\nconst identifyHue = (hue: Degree): string => {\n  // console.log('||| hue', hue)\n  const hueWrapped = wrapAround(hue, [0, 360])\n  const { name } =\n    rangeNames.find(({ hue }) => hueWrapped >= hue) || rangeNames[0]\n  /*\n      console.log('||| hue', hue,\n        'is between', namingPointA.hue,\n        'and', namingPointB.hue,\n        'therefore it is named', namingPointA.name)\n      */\n  return name\n}\n\nexport { identifyHue }\n", "import type { ChannelObject, HSL } from \"~\"\n\nimport { hueFromChannels, satFromChannels, lumFromChannels } from \"../solveFor\"\n\nconst channelsToSpec = ({ R, G, B }: ChannelObject): HSL => {\n  const hue = hueFromChannels({ R, G, B })\n  const sat = satFromChannels({ R, G, B })\n  const lum = lumFromChannels({ R, G, B })\n  return { hue, sat, lum }\n}\n\nexport default channelsToSpec\n", "import type { Hex } from \"~\"\n\nconst BASE_16_CHAR_SET = `[a-fA-F0-9]+`\n\nconst miniHexToHex = (miniHex: string): Hex => {\n  const miniHexArray = miniHex.split(``)\n  const hexTemplate = [0, 0, 1, 1, 2, 2]\n  return hexTemplate.map((idx) => miniHexArray[idx]).join(``)\n}\n\nconst normalizeHex = (maybeHex: string): Hex => {\n  const hex = maybeHex.replace(/^#/, ``)\n  const hexIsCorrectLength = hex.length === 6 || hex.length === 3\n  const hexIsCorrectCharSet =\n    hex.match(new RegExp(`^${BASE_16_CHAR_SET}$`)) !== null\n  const hexIsValid = hexIsCorrectLength && hexIsCorrectCharSet\n  if (!hexIsValid) {\n    throw new Error(`${maybeHex} is not a valid hex code`)\n  }\n  if (hex.length === 3) {\n    return miniHexToHex(hex)\n  }\n  return hex\n}\n\nexport default normalizeHex\n", "import type { ChannelObject } from \"~\"\n\nimport normalizeHex from \"./normalizeHex\"\n\nexport default (maybeHex: string): ChannelObject => {\n  const hex = normalizeHex(maybeHex)\n  const getHexcodeChannel = (nameOfChannel: `b` | `g` | `r`) => {\n    switch (nameOfChannel) {\n      /* eslint-disable prettier/prettier */\n      case `r`: return hex.slice(0, 2)\n      case `g`: return hex.slice(2, 4)\n      case `b`: return hex.slice(4, 6)\n      default: throw new Error(`strange channel name`)\n      /* eslint-enable prettier/prettier */\n    }\n  }\n  const rBase10 = parseInt(getHexcodeChannel(`r`), 16)\n  const gBase10 = parseInt(getHexcodeChannel(`g`), 16)\n  const bBase10 = parseInt(getHexcodeChannel(`b`), 16)\n\n  return {\n    R: rBase10,\n    G: gBase10,\n    B: bBase10,\n  }\n}\n", "import type { HSL } from \"~\"\n\nimport channelsToSpec from \"./channelsToSpec\"\nimport hexToChannels from \"./hexToChannels\"\n\nconst hexToSpec = (hex: string): HSL => {\n  const { R, G, B } = hexToChannels(hex)\n  /*\n  console.log('+++ input hex', hex)\n  console.log('||| R', R)\n  console.log('||| G', G)\n  console.log('||| B', B)\n  */\n  const { hue, sat, lum } = channelsToSpec({ R, G, B })\n  return { hue, sat, lum }\n}\n\nexport default hexToSpec\n", "import type { Mixer } from \".\"\n\nconst contrast: Mixer<0 | 1 | 2> = (color, value) => {\n  const { lum } = color\n  switch (value) {\n    case 0:\n      return { ...color, lum: lum > 0.666 ? 0 : 1 }\n    case 1:\n      return { ...color, lum: lum > 0.666 ? 0.05 : 0.95 }\n    case 2:\n      if (lum > 0.75) {\n        return { ...color, lum: lum / 2 }\n      } else if (lum < 0.25) {\n        return { ...color, lum: lum + (1 - lum) / 2 }\n      }\n      return { ...color, lum: lum > 0.666 ? 1 : 0 }\n  }\n}\n\nexport default contrast\n", "import type { Mixer } from \".\"\nimport { wrapAround } from \"..\"\n\nexport const setHue: Mixer<number | ((hue: number) => number)> = (\n  color,\n  value\n) => {\n  const newHue = value instanceof Function ? value(color.hue) : value\n  return { ...color, hue: wrapAround(newHue, [0, 360]) }\n}\n\nexport const trine: Mixer<number> = (color, value) =>\n  setHue(color, (hue) => hue + value * 120)\n\nexport const tetra: Mixer<number> = (color, value) =>\n  setHue(color, (hue) => hue + value * 90)\n\nexport const split: Mixer<number> = (color, value) =>\n  setHue(color, (hue) => hue + value * 150)\n", "import type { Mixer } from \".\"\nimport { clamp } from \"..\"\n\nexport const setLum: Mixer<number | ((lum: number) => number)> = (\n  color,\n  value\n) => {\n  const newLum = value instanceof Function ? value(color.lum) : value\n  return { ...color, lum: clamp(newLum, [0, 1]) }\n}\nexport const tint: Mixer<number> = (color, value) =>\n  setLum(color, (lum) => (lum * 100 + value) / 100)\n\nexport const shade: Mixer<number> = (color, value) =>\n  setLum(color, (lum) => (lum * 100 - value) / 100)\n", "import type { Mixer } from \".\"\nimport { clamp } from \"..\"\n\nexport const setSat: Mixer<number | ((sat: number) => number)> = (\n  color,\n  value\n) => {\n  const newSat = value instanceof Function ? value(color.sat) : value\n  return { ...color, sat: clamp(newSat, [0, 255]) }\n}\nexport const amp: Mixer<number> = (color, value) =>\n  setSat(color, (sat) => sat + value)\n\nexport const mute: Mixer<number> = (color, value) =>\n  setSat(color, (sat) => sat - value)\n", "import type { LuumSpec } from \"~\"\n\nimport { specToHexFixLimit } from \"~/export\"\nimport { hexToSpec } from \"~/import\"\n\nimport contrast from \"./contrast\"\nimport { setHue, split, tetra, trine } from \"./hue\"\nimport { setLum, shade, tint } from \"./lum\"\nimport { setSat, amp, mute } from \"./sat\"\n\nexport type MixerArgs = {\n  hex: string\n  spec: LuumSpec\n  hue: number\n  sat: number\n  lum: number\n  prefer: `lum` | `sat`\n  fix: `lum` | `sat`\n  contrast: 0 | 1 | 2\n  amp: number\n  mute: number\n  tint: number\n  shade: number\n  split: number\n  tetra: number\n  trine: number\n  //cool: number\n  //warm: number\n}\n\nexport type MixerName = keyof MixerArgs\n\nexport type MixTuple<N extends MixerName> = [N, MixerArgs[N]]\n\nexport type Mix = MixTuple<keyof MixerArgs>[]\n\nexport type Mixer<V> = (color: LuumSpec, value: V) => LuumSpec\n\nconst mixers: {\n  [Name in MixerName]: Mixer<MixerArgs[Name]>\n} = {\n  hex: (color, value) => ({ ...color, ...hexToSpec(value) }),\n  spec: (_, value) => ({ ...value }),\n  hue: setHue,\n  sat: setSat,\n  lum: setLum,\n  fix: (color, prefer) => ({\n    ...color,\n    prefer,\n    ...specToHexFixLimit({ ...color, prefer }).fix,\n  }),\n  prefer: (color, prefer) => ({ ...color, prefer }),\n  amp,\n  contrast,\n  mute,\n  tint,\n  shade,\n  split,\n  tetra,\n  trine,\n}\n\nexport default mixers\n", "import type {\n  CssSelector,\n  InteractivePalette,\n  NonInteractivePalette,\n  Palette,\n  Scheme,\n} from \".\"\nimport { mixPalette } from \".\"\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst isInteractivePalette = (\n  palette: Palette<any>\n): palette is InteractivePalette<any> =>\n  !Object.values(palette.attributes)[0].dry\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst indent = (indent = 1, text: string) => ` `.repeat(indent * 2) + text\n\nconst openCssRule = (gen = 0, ...selectors: CssSelector[]): string =>\n  selectors.length > 1\n    ? selectors.reduce<string>((acc, selector, idx) => {\n        const maybeComma = idx === 0 ? `` : `,`\n        return `\\n` + indent(gen, selector) + maybeComma + acc\n      }, ``) + ` {\\n`\n    : `${indent(gen, `${selectors[0]} {\\n`)}`\n\nconst closeCssRule = (gen = 0) => `${indent(gen, `}\\n`)}`\n\nconst createCssProperty = (key: string, value: string, gen = 0) =>\n  indent(1 + gen, `${key}: ${value};\\n`)\n\nexport const paletteToScssDeclarationStatic = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  palette: NonInteractivePalette<any>,\n  generation: number\n): string => {\n  let scssDeclaration = ``\n  for (const [attribute, { dry: hex }] of Object.entries(palette.attributes)) {\n    scssDeclaration += createCssProperty(attribute, hex, generation)\n  }\n  return scssDeclaration\n}\n\nexport const paletteToScssDeclarationInteractive = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  palette: InteractivePalette<any>,\n  gen: number\n): string => {\n  let declaration = ``\n  const stateDeclarations = {\n    hover: openCssRule(gen + 1, `&:hover`, `&:focus`, `&:focus-within`),\n    active: openCssRule(gen + 1, `&:active`, `&.active`),\n    disabled: openCssRule(gen + 1, `&:disabled`, `&.disabled`),\n  }\n  for (const [key, { base, hover, active, disabled }] of Object.entries(\n    palette.attributes\n  )) {\n    declaration += createCssProperty(key, base.dry, gen)\n    stateDeclarations.hover += createCssProperty(key, hover.dry, gen + 1)\n    stateDeclarations.active += createCssProperty(key, active.dry, gen + 1)\n    stateDeclarations.disabled += createCssProperty(key, disabled.dry, gen + 1)\n  }\n  stateDeclarations.hover += closeCssRule(gen + 1)\n  stateDeclarations.active += closeCssRule(gen + 1)\n  stateDeclarations.disabled += closeCssRule(gen + 1)\n  declaration += stateDeclarations.hover\n  declaration += stateDeclarations.active\n  declaration += stateDeclarations.disabled\n  return declaration\n}\n\nexport const paletteToScssDeclaration = <T extends Scheme>(\n  palette: Palette<T>,\n  generation: number\n): string =>\n  isInteractivePalette(palette)\n    ? paletteToScssDeclarationInteractive(palette, generation)\n    : paletteToScssDeclarationStatic(palette, generation)\n\nexport const nestChildRules = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  palette: Palette<any>,\n  generation: number\n): string => {\n  let nestedRules = ``\n  if (palette.children) {\n    for (const child of Object.entries(palette.children)) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const [selector, childPalette] = child as [CssSelector, Palette<any>]\n      nestedRules += paletteToScssRule(selector, childPalette, generation + 1)\n    }\n  }\n  return nestedRules\n}\n\nexport const paletteToScssRule = (\n  selector: CssSelector,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  palette: Palette<any>,\n  generation = 0\n): string => {\n  let scssBlock = openCssRule(generation, selector)\n  scssBlock += paletteToScssDeclaration(palette, generation)\n  scssBlock += nestChildRules(palette, generation)\n  scssBlock += closeCssRule(generation)\n  return scssBlock\n}\n\nexport type SchemeToScssRule = (selector: CssSelector, scheme: Scheme) => string\n\nexport const schemeToScssRule: SchemeToScssRule = (selector, scheme) => {\n  const palette = mixPalette(scheme)\n  const scss = paletteToScssRule(selector, palette)\n  return scss\n}\n", "import type { LuumSpec } from \"~\"\n\nexport const defaultSpec: LuumSpec = {\n  hue: 0,\n  lum: 0,\n  sat: 0,\n  prefer: `lum`,\n}\n", "const mapObject = <KeyedObj, I, O>(\n  obj: { [K in keyof KeyedObj]: I },\n  fn: (val: I, key: keyof KeyedObj) => O\n): { [K in keyof KeyedObj]: O } => {\n  const newObj = {} as { [K in keyof KeyedObj]: O }\n  const entries = Object.entries(obj) as [keyof KeyedObj, I][]\n  entries.forEach(([key, val]) => {\n    newObj[key] = fn(val, key)\n  })\n  return newObj\n}\n\nexport default mapObject\n", "import type { Filter, LuumSpec } from \"~\"\n\nimport { unfiltered } from \"~/constants/filters\"\nimport { defaultSpec } from \"~/constants/spec\"\nimport { specToHex } from \"~/export\"\nimport type { Mix, Mixer } from \"~/mixers\"\nimport mixers from \"~/mixers\"\nimport mapObject from \"~/utils/mapObject\"\n\nimport type {\n  Swatch,\n  InteractivePalette,\n  InteractiveScheme,\n  InteractiveSwatch,\n  InteractiveMix,\n  Scheme,\n  NonInteractiveScheme,\n  NonInteractivePalette,\n} from \".\"\n\nexport const isInteractiveSwatch = (\n  swatch: InteractiveSwatch | Swatch | undefined\n): swatch is InteractiveSwatch => {\n  if (swatch === undefined) return false\n  return Boolean((swatch as InteractiveSwatch).base)\n}\n\ntype MixNewSpec = (spec: LuumSpec, mix: Mix) => LuumSpec\n\nexport const mixNewSpec: MixNewSpec = (spec, mix) =>\n  mix.reduce<LuumSpec>((currentColor, [name, value]) => {\n    const mixer = mixers[name] as Mixer<typeof value>\n    return mixer(currentColor, value)\n  }, spec)\n\ntype MixNewSwatch = (spec: LuumSpec, mix: Mix, filter?: Filter) => Swatch\n\nexport const mixNewSwatch: MixNewSwatch = (spec, mix, filter) => {\n  const wet = mixNewSpec(spec, mix)\n  const dry = specToHex(wet, filter)\n  return { wet, dry }\n}\n\ntype MixPaletteStatic = <S extends NonInteractiveScheme>(\n  scheme: S,\n  parent?: {\n    filter: Filter\n    attributes: Record<string, InteractiveSwatch> | Record<string, Swatch>\n  }\n) => NonInteractivePalette<S>\n\nexport const mixPaletteStatic: MixPaletteStatic = (scheme, parent) => {\n  const filter = scheme.filter || parent?.filter || unfiltered\n  const rootSpec = mixNewSpec(defaultSpec, scheme.root || [])\n\n  const paletteAttributes = mapObject(scheme.attributes, (mix: Mix, key) => {\n    const parentAttribute = parent?.attributes[key]\n    const startingPoint = isInteractiveSwatch(parentAttribute)\n      ? parentAttribute.base.wet\n      : parentAttribute?.wet || rootSpec\n\n    console.log(parentAttribute)\n    console.log(startingPoint)\n    return mixNewSwatch(startingPoint, mix, filter)\n  }) as Record<keyof typeof scheme.attributes, Swatch>\n\n  const palette: NonInteractivePalette<typeof scheme> = {\n    attributes: paletteAttributes as NonInteractivePalette<\n      typeof scheme\n    >[`attributes`],\n  }\n\n  if (scheme.children) {\n    palette.children = mapObject(scheme.children, (child: Scheme) =>\n      mixPalette(child, { filter, attributes: paletteAttributes })\n    ) as NonInteractivePalette<typeof scheme>[`children`]\n  }\n\n  return palette\n}\n\ntype MixPaletteInteractive = <S extends InteractiveScheme>(\n  scheme: S,\n  parent?: {\n    filter: Filter\n    attributes: Record<string, InteractiveSwatch> | Record<string, Swatch>\n  }\n) => InteractivePalette<S>\n\nexport const mixPaletteInteractive: MixPaletteInteractive = (scheme, parent) => {\n  const filter = scheme.filter || parent?.filter || unfiltered\n  const rootSpec = mixNewSpec(defaultSpec, scheme.root || [])\n\n  const baseSwatches = mapObject(\n    scheme.attributes,\n    (attribute: InteractiveMix, key) => {\n      const parentAttribute = parent?.attributes[key]\n      const startingPoint = isInteractiveSwatch(parentAttribute)\n        ? parentAttribute.base.wet\n        : parentAttribute?.wet || rootSpec\n      return mixNewSwatch(startingPoint, attribute.base, filter)\n    }\n  ) as Record<keyof typeof scheme.attributes, Swatch>\n\n  const paletteAttributes = mapObject(\n    scheme.attributes,\n    (attribute: InteractiveMix, attributeKey) =>\n      mapObject(attribute, (state: Mix, stateKey) => {\n        if (stateKey === `base`) {\n          return baseSwatches[attributeKey]\n        }\n        return mixNewSwatch(baseSwatches[attributeKey].wet, state, filter)\n      })\n  ) as InteractivePalette<typeof scheme>[`attributes`]\n\n  const palette: InteractivePalette<typeof scheme> = {\n    attributes: paletteAttributes,\n  }\n\n  if (scheme.children) {\n    palette.children = mapObject(scheme.children, (child: Scheme) =>\n      mixPalette(child, { filter, attributes: paletteAttributes })\n    ) as InteractivePalette<typeof scheme>[`children`]\n  }\n\n  return palette\n}\n\nconst isInteractiveScheme = (scheme: Scheme): scheme is InteractiveScheme =>\n  !Array.isArray(Object.values(scheme.attributes)[0])\n\ntype MixPalette = <S extends Scheme>(\n  scheme: S,\n  parent?: {\n    filter: Filter\n    attributes: Record<string, InteractiveSwatch> | Record<string, Swatch>\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) => InteractivePalette<any> | NonInteractivePalette<any>\n\nexport const mixPalette: MixPalette = (scheme, parent) =>\n  isInteractiveScheme(scheme)\n    ? mixPaletteInteractive(scheme, parent)\n    : mixPaletteStatic(scheme, parent)\n"],
  "mappings": "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",
  "names": []
}
