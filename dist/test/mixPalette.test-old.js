"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const scheme_1 = require("~/scheme");
const import_1 = require("~/scheme/import");
const BLUE = {
    hue: 200,
    sat: 255,
    lum: 0,
    prefer: `lum`,
};
describe(`mixPalette`, () => {
    it(`renders css with hover and active attributes`, () => {
        const scheme = {
            root: [[`spec`, BLUE]],
            attributes: {
                "--color-bg": {
                    base: [[`lum`, 95 / 100]],
                    hover: [[`lum`, 1]],
                    active: [[`prefer`, `sat`]],
                    disabled: [[`lum`, 0]],
                },
                "--color-fg": {
                    base: [
                        [`fix`, `sat`],
                        [`shade`, 10],
                    ],
                    hover: [[`fix`, `sat`]],
                    active: [[`lum`, 0]],
                    disabled: [[`lum`, 0]],
                },
            },
        };
        const palette = (0, import_1.mixPalette)(scheme);
        console.log(palette);
        const css = (0, scheme_1.paletteToScssRule)(`input[type="whatever"]`, palette);
        console.log(css);
        //    expect(palette).toBeCloseTo(150)
    });
    it(`renders child rules`, () => {
        const scheme = {
            root: [[`spec`, BLUE]],
            attributes: {
                "--color-bg": [[`lum`, 95 / 100]],
            },
            children: {
                "div.foo": {
                    attributes: {
                        "--color-bg": [[`lum`, 85 / 100]],
                    },
                },
            },
        };
        const palette = (0, import_1.mixPalette)(scheme);
        const css = (0, scheme_1.paletteToScssRule)(`input[type="whatever"]`, palette);
        console.log(css);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4UGFsZXR0ZS50ZXN0LW9sZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3Rlc3QvbWl4UGFsZXR0ZS50ZXN0LW9sZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUdBLHFDQUE0QztBQUM1Qyw0Q0FBNEM7QUFFNUMsTUFBTSxJQUFJLEdBQWE7SUFDckIsR0FBRyxFQUFFLEdBQUc7SUFDUixHQUFHLEVBQUUsR0FBRztJQUNSLEdBQUcsRUFBRSxDQUFDO0lBQ04sTUFBTSxFQUFFLEtBQUs7Q0FDZCxDQUFBO0FBRUQsUUFBUSxDQUFDLFlBQVksRUFBRSxHQUFHLEVBQUU7SUFDMUIsRUFBRSxDQUFDLDhDQUE4QyxFQUFFLEdBQUcsRUFBRTtRQUN0RCxNQUFNLE1BQU0sR0FBc0I7WUFDaEMsSUFBSSxFQUFFLENBQUMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDdEIsVUFBVSxFQUFFO2dCQUNWLFlBQVksRUFBRTtvQkFDWixJQUFJLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLEdBQUcsR0FBRyxDQUFDLENBQUM7b0JBQ3pCLEtBQUssRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO29CQUNuQixNQUFNLEVBQUUsQ0FBQyxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztvQkFDM0IsUUFBUSxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7aUJBQ3ZCO2dCQUNELFlBQVksRUFBRTtvQkFDWixJQUFJLEVBQUU7d0JBQ0osQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDO3dCQUNkLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQztxQkFDZDtvQkFDRCxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztvQkFDdkIsTUFBTSxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7b0JBQ3BCLFFBQVEsRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO2lCQUN2QjthQUNGO1NBQ0YsQ0FBQTtRQUNELE1BQU0sT0FBTyxHQUFHLElBQUEsbUJBQVUsRUFBQyxNQUFNLENBQUMsQ0FBQTtRQUNsQyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ3BCLE1BQU0sR0FBRyxHQUFHLElBQUEsMEJBQWlCLEVBQUMsd0JBQXdCLEVBQUUsT0FBTyxDQUFDLENBQUE7UUFDaEUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQTtRQUNoQixzQ0FBc0M7SUFDeEMsQ0FBQyxDQUFDLENBQUE7SUFDRixFQUFFLENBQUMscUJBQXFCLEVBQUUsR0FBRyxFQUFFO1FBQzdCLE1BQU0sTUFBTSxHQUF5QjtZQUNuQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztZQUN0QixVQUFVLEVBQUU7Z0JBQ1YsWUFBWSxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDO2FBQ2xDO1lBQ0QsUUFBUSxFQUFFO2dCQUNSLFNBQVMsRUFBRTtvQkFDVCxVQUFVLEVBQUU7d0JBQ1YsWUFBWSxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDO3FCQUNsQztpQkFDRjthQUNGO1NBQ0YsQ0FBQTtRQUNELE1BQU0sT0FBTyxHQUFHLElBQUEsbUJBQVUsRUFBQyxNQUFNLENBQUMsQ0FBQTtRQUNsQyxNQUFNLEdBQUcsR0FBRyxJQUFBLDBCQUFpQixFQUFDLHdCQUF3QixFQUFFLE9BQU8sQ0FBQyxDQUFBO1FBQ2hFLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDbEIsQ0FBQyxDQUFDLENBQUE7QUFDSixDQUFDLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTHV1bVNwZWMgfSBmcm9tIFwiflwiXG5cbmltcG9ydCB0eXBlIHsgSW50ZXJhY3RpdmVTY2hlbWUsIE5vbkludGVyYWN0aXZlU2NoZW1lIH0gZnJvbSBcIn4vc2NoZW1lXCJcbmltcG9ydCB7IHBhbGV0dGVUb1Njc3NSdWxlIH0gZnJvbSBcIn4vc2NoZW1lXCJcbmltcG9ydCB7IG1peFBhbGV0dGUgfSBmcm9tIFwifi9zY2hlbWUvaW1wb3J0XCJcblxuY29uc3QgQkxVRTogTHV1bVNwZWMgPSB7XG4gIGh1ZTogMjAwLFxuICBzYXQ6IDI1NSxcbiAgbHVtOiAwLFxuICBwcmVmZXI6IGBsdW1gLFxufVxuXG5kZXNjcmliZShgbWl4UGFsZXR0ZWAsICgpID0+IHtcbiAgaXQoYHJlbmRlcnMgY3NzIHdpdGggaG92ZXIgYW5kIGFjdGl2ZSBhdHRyaWJ1dGVzYCwgKCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtZTogSW50ZXJhY3RpdmVTY2hlbWUgPSB7XG4gICAgICByb290OiBbW2BzcGVjYCwgQkxVRV1dLFxuICAgICAgYXR0cmlidXRlczoge1xuICAgICAgICBcIi0tY29sb3ItYmdcIjoge1xuICAgICAgICAgIGJhc2U6IFtbYGx1bWAsIDk1IC8gMTAwXV0sXG4gICAgICAgICAgaG92ZXI6IFtbYGx1bWAsIDFdXSxcbiAgICAgICAgICBhY3RpdmU6IFtbYHByZWZlcmAsIGBzYXRgXV0sXG4gICAgICAgICAgZGlzYWJsZWQ6IFtbYGx1bWAsIDBdXSxcbiAgICAgICAgfSxcbiAgICAgICAgXCItLWNvbG9yLWZnXCI6IHtcbiAgICAgICAgICBiYXNlOiBbXG4gICAgICAgICAgICBbYGZpeGAsIGBzYXRgXSxcbiAgICAgICAgICAgIFtgc2hhZGVgLCAxMF0sXG4gICAgICAgICAgXSxcbiAgICAgICAgICBob3ZlcjogW1tgZml4YCwgYHNhdGBdXSxcbiAgICAgICAgICBhY3RpdmU6IFtbYGx1bWAsIDBdXSxcbiAgICAgICAgICBkaXNhYmxlZDogW1tgbHVtYCwgMF1dLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9XG4gICAgY29uc3QgcGFsZXR0ZSA9IG1peFBhbGV0dGUoc2NoZW1lKVxuICAgIGNvbnNvbGUubG9nKHBhbGV0dGUpXG4gICAgY29uc3QgY3NzID0gcGFsZXR0ZVRvU2Nzc1J1bGUoYGlucHV0W3R5cGU9XCJ3aGF0ZXZlclwiXWAsIHBhbGV0dGUpXG4gICAgY29uc29sZS5sb2coY3NzKVxuICAgIC8vICAgIGV4cGVjdChwYWxldHRlKS50b0JlQ2xvc2VUbygxNTApXG4gIH0pXG4gIGl0KGByZW5kZXJzIGNoaWxkIHJ1bGVzYCwgKCkgPT4ge1xuICAgIGNvbnN0IHNjaGVtZTogTm9uSW50ZXJhY3RpdmVTY2hlbWUgPSB7XG4gICAgICByb290OiBbW2BzcGVjYCwgQkxVRV1dLFxuICAgICAgYXR0cmlidXRlczoge1xuICAgICAgICBcIi0tY29sb3ItYmdcIjogW1tgbHVtYCwgOTUgLyAxMDBdXSxcbiAgICAgIH0sXG4gICAgICBjaGlsZHJlbjoge1xuICAgICAgICBcImRpdi5mb29cIjoge1xuICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgIFwiLS1jb2xvci1iZ1wiOiBbW2BsdW1gLCA4NSAvIDEwMF1dLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH1cbiAgICBjb25zdCBwYWxldHRlID0gbWl4UGFsZXR0ZShzY2hlbWUpXG4gICAgY29uc3QgY3NzID0gcGFsZXR0ZVRvU2Nzc1J1bGUoYGlucHV0W3R5cGU9XCJ3aGF0ZXZlclwiXWAsIHBhbGV0dGUpXG4gICAgY29uc29sZS5sb2coY3NzKVxuICB9KVxufSlcbiJdfQ==