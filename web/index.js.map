{
  "version": 3,
  "sources": ["../../node_modules/fp-ts/lib/function.js", "../src/constants/index.ts", "../src/constants/filters.ts", "../src/constants/schemes.ts", "../src/export/channelsToHex.ts", "../src/utils/clamp.ts", "../src/utils/interpolate.ts", "../src/utils/wrapAround.ts", "../src/import/hueToRelativeChannels.ts", "../src/solveFor/hueFromChannels.ts", "../src/solveFor/lumFromChannels.ts", "../src/solveFor/maxSatForHueInFilter.ts", "../src/solveFor/satFromChannels.ts", "../src/solveFor/specificLumFromHue.ts", "../src/export/specToChannelsFixLimit.ts", "../src/export/specToHexFixLimit.ts", "../src/export/specToHex.ts", "../src/identify/hue.ts", "../src/import/channelsToSpec.ts", "../src/import/normalizeHex.ts", "../src/import/hexToChannels.ts", "../src/import/hexToSpec.ts", "../src/scheme/index.ts", "../src/constants/spec.ts", "../src/mixers/lum.ts"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndomorphismMonoid = exports.not = exports.SK = exports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.unsafeCoerce = exports.identity = exports.apply = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBooleanAlgebra = void 0;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getBooleanAlgebra = function (B) { return function () { return ({\n    meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n    join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n    zero: function () { return B.zero; },\n    one: function () { return B.one; },\n    implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n    not: function (x) { return function (a) { return B.not(x(a)); }; }\n}); }; };\nexports.getBooleanAlgebra = getBooleanAlgebra;\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function (S) { return function () { return ({\n    concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n}); }; };\nexports.getSemigroup = getSemigroup;\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getMonoid = function (M) {\n    var getSemigroupM = exports.getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\nexports.getSemiring = getSemiring;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getRing = function (R) {\n    var S = exports.getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\nexports.getRing = getRing;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar apply = function (a) { return function (f) { return f(a); }; };\nexports.apply = apply;\n/**\n * @since 2.0.0\n */\nfunction identity(a) {\n    return a;\n}\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nfunction constant(a) {\n    return function () { return a; };\n}\nexports.constant = constant;\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexports.constTrue = \n/*#__PURE__*/\nconstant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexports.constFalse = \n/*#__PURE__*/\nconstant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexports.constNull = \n/*#__PURE__*/\nconstant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexports.constUndefined = \n/*#__PURE__*/\nconstant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexports.constVoid = exports.constUndefined;\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nfunction flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexports.flip = flip;\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\nfunction tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\nfunction increment(n) {\n    return n + 1;\n}\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\nfunction decrement(n) {\n    return n - 1;\n}\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\nfunction absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\nexports.absurd = absurd;\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nfunction tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\nexports.tupled = tupled;\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nfunction untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexports.untupled = untupled;\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default:\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n    }\n}\nexports.pipe = pipe;\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexports.hole = absurd;\n/**\n * @since 2.11.0\n */\nvar SK = function (_, b) { return b; };\nexports.SK = SK;\n/**\n * Use `Predicate` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nfunction not(predicate) {\n    return function (a) { return !predicate(a); };\n}\nexports.not = not;\n/**\n * Use `Endomorphism` module instead.\n *\n * @category instances\n * @since 2.10.0\n * @deprecated\n */\nvar getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\nexports.getEndomorphismMonoid = getEndomorphismMonoid;\n", "export const HUE_STRUCTURES = {\n  none: [],\n  polar: [180],\n  split: [150, 210],\n  trine: [120, 240],\n  square: [90, 180, 270],\n}\nexport const CHANNEL_SPECIFIC_LUM = {\n  R: 0.3,\n  G: 0.5,\n  B: 0.2,\n}\n/*\nconst I'M_WONDERING_IF_THIS_IS_NOT_VERY_ACCURATE = {\n  R: 0.2126,\n  G: 0.7152,\n  B: 0.0722,\n}\n*/\n", "import type { Filter } from \"~\"\n\nexport const unfiltered: Filter = [\n  { sat: 255, hue: 0 },\n  { sat: 255, hue: 360 },\n]\nexport const CMYK: Filter = [\n  { sat: 255, hue: 55 },\n  { sat: 127, hue: 120 },\n  { sat: 255, hue: 200 },\n  { sat: 255, hue: 205 },\n  { sat: 170, hue: 240 },\n  { sat: 230, hue: 270 },\n  { sat: 210, hue: 300 },\n  { sat: 255, hue: 320 },\n]\n", "export const UI = {\n  state: {\n    hover: {},\n    active: {},\n    disabled: {},\n  },\n  bg: {\n    shade: 24,\n    state: {\n      base: {},\n      hover: { shade: 18 },\n      active: { shade: 32 },\n      disabled: { shade: 32 },\n    },\n  },\n  mg: {\n    shade: 48,\n  },\n  fg: {\n    contrast: `soft`,\n    state: {\n      hover: { contrast: `harden` },\n      active: { contrast: `harden` },\n      disabled: { shade: 20 },\n    },\n  },\n}\n\n// Example:\n/* ```\n[\n  [<component-name>, {\n    'rootColor': [],\n    'variables': [],\n    'children': [<recurse>]\n  }],\n  []\n]\n\n// transforms: shade, tint, contrast, sat, lum, hue\n\n```\n*/\n\nexport const trifactory = {\n  PaletteModule: {\n    contextColor: [{ resetColor: `#fee` }, { shade: 20 }],\n    /*\n    // NOTE: These state changes are localized to the current\n    // object, and have no impact on children.\n    states: {\n      hover: [{tint: 10}, {shade: 22}],\n    },\n    */\n    // NOTE: these variables get included into each child\n    // as ex-<variable-name>\n    variables: {\n      bg: [],\n      mg: [{ resetColor: 1 }, { shade: 10 }],\n      fg: [{ contrast: `soft` }],\n    },\n    children: {\n      Control: {\n        // NOTE: All these colors start with the contextColor\n        // and not with the ex-color from parent\n        states: {\n          base: {},\n          hover: [{ tint: 12 }],\n          active: [{ shade: 18 }],\n        },\n        variables: {\n          bg: [{ shade: 24 }],\n          mg: [{ shade: 48 }],\n          fg: {\n            // NOTE: All these colors start with a context of the\n            // existing state of the parent.\n            states: {\n              base: [{ shade: 24 }, { contrast: `soft` }],\n              hover: [{ shade: 24 }, { contrast: `soft` }],\n              active: [{ shade: 24 }, { contrast: `hard` }],\n            },\n          },\n        },\n      },\n    },\n  },\n}\n\n// color scheme  ->           = CSS stylesheet\n// color palette -> component = CSS scope\n// color element -> role      = CSS variable\n// color state   ->             CSS pseudo-class\n\n// factored ops -> nested hex lists -> compiled form (CSS)\n// scheme       -> palette set      -> package\n\n// ops\n// _ PaletteName   // use\n// _ transformation\n// _ input > state\n// _ el\n\n/* scheme\n\n*/\n\n// palettes\nexport const palettes = [\n  {\n    id: `PaletteName`,\n    hex: `#f00`,\n    states: [\n      {\n        id: `base`,\n        hex: `#f00`,\n        elements: [\n          { id: `bg`, hex: `#f00` },\n          { id: `mg`, hex: `#f00` },\n          { id: `fg`, hex: `#f00` },\n        ],\n      },\n      {\n        id: `hover`,\n        hex: `#f00`,\n        elements: [\n          { id: `bg`, hex: `#f00` },\n          { id: `mg`, hex: `#f00` },\n          { id: `fg`, hex: `#f00` },\n        ],\n      },\n    ],\n  },\n]\n\n/*\nconst colorSchema = {\n  exfg: colorContext.softContrast,\n  exbg: hex,\n  fg: {\n    base: colorContext.softContrast,\n    hover: colorContext.softContrast,\n    active: colorContext.hardContrast,\n    disable: a,\n  },\n  mg: [20, 15, 25].map(n => shade(n)),\n  bg: [10, 5, 15].map(n => shade(n)),\n}\n\nconst stylesheet = `\na\n`\n*/\n", "import type { ChannelObject, Hex } from \"~\"\n\nconst channelsToHex = (channels: ChannelObject): Hex =>\n  `#${Object.values(channels)\n    .map((channel) => {\n      let channelHex = channel.toString(16)\n      if (channelHex.length === 1) channelHex = 0 + channelHex\n      return channelHex\n    })\n    .join(``)}`\n\nexport default channelsToHex\n", "type Clamp = (value: number, [min, max]: [number, number]) => number\n\nconst clamp: Clamp = (value, [min, max]) =>\n  value > max ? max : value < min ? min : value\n\nexport default clamp\n", "import type { Fraction } from \"~\"\n\ntype Interpolate = (args: {\n  completionRatio: Fraction\n  range: [to: number, from: number]\n}) => number\n\nconst interpolate: Interpolate = ({\n  completionRatio = 0.5,\n  range: [to, from],\n}) => {\n  const value = from + completionRatio * (to - from)\n  /*\n  console.log('||| to', to, 'from', from)\n  console.log(\"||| completionRatio\", completionRatio)\n  console.log(\"||| value\", value)\n  */\n  return value\n}\n\nexport default interpolate\n", "const wrapAround = (value: number, [min, max]: [number, number]): number => {\n  const range = max - min\n  while (value >= max) value -= range\n  while (value < min) value += range\n  return value\n}\n\nexport default wrapAround\n", "import type { Degree, Fraction } from \"~\"\n\nimport { wrapAround } from \"../utils\"\n\n/*eslint-disable max-len */\n/**\n * Gives us the relative values of the channels,\n * irrespective of the white light beneath them.\n * @param {number} hue - in degrees. Gets safely wrapped around first thing.\n *\n * Digital Red      0 ->   0\n *\n * Sunlight         50 ->  50\n *\n * Digital Yellow   60 ->  60\n *\n * Citron           70 ->  70\n *\n * Turquoise        510 -> 150\n *\n * @const {number} hueReduced - hue 0-359.9 is now a floating point 0-5.999.\n *\n * Digital Red    0 ->   0  ~  0.000\n *\n * Sunlight       50 -> 5/6  ~  0.833\n *\n * Digital Yellow 60 ->   1  ~  1.000\n *\n * Citron         70 -> 7/6  ~  1.167\n *\n * Turquoise      150 -> 5/2  ~  2.500\n *\n * @const {number} hueInteger - from 1-6. Tells us what color region we are in.\n *\n * Digital Red    0.000 -> 0\n *                : red-into-yellow region\n *\n * Sunlight       0.833 -> 0\n *                : red-into-yellow region\n *\n * Digital Yellow 1.000 -> 1\n *                : yellow-into-green region\n *\n * Citron         1.167 -> 1\n *                : yellow-into-green region\n *\n * Turquoise      2.500 -> 2\n *                : green-into-cyan region\n *\n * hueInteger is the 'whole number' piece of hueReduced.\n * FYI, the six color regions are bounded by red, yellow, green, cyan, blue, magenta.\n *\n * @const {number} hueDecimal - tells where we are in this region.\n *\n * Digital Red    0.000 -> 0.000\n *                : at the very beginning\n *\n * Sunlight       0.833 -> 0.833\n *                : near the end\n *\n * Digital Yellow 1.000 -> 0.000\n *                : at the very beginning\n *\n * Citron         1.167 -> 0.167\n *                : near the beginning\n *\n * Turquoise      2.500 -> 0.500\n *                : at the halfway point\n *\n * hueDecimal is the 'fraction' piece of hueReduced.\n * we are going to use this number to determine the value of the in-between channel.\n *\n * @const {number} x - used in primary-secondary transitions like Red into Yellow\n * @const {number} y - used in secondary-primary transitions like Yellow into Green\n * To understand the function of x and y, take the difference between\n *\n * Sunlight       (hue 50),\n * Citron         (hue 70),\n * Digital Yellow (hue 60),\n *\n * as an instructive case. These colors are all basically yellow.\n *\n * Sunlight is hue 50, which puts it near the end of the red-into-yellow region.\n *\n * This means its Red channel is full, and its Green channel is almost full.\n * The fullness of its Green channel is directly proportional to its\n * hueDecimal, the distance from the beginning of this region: 0.833\n *\n * Citron is hue 70, which puts it near the beginning of the yellow-into-green region.\n *\n * This means its Red channel is ALMOST FULL, and its Green channel is FULL.\n * So the fullness of its Red channel is INVERSELY proportional to its\n * hueDecimal, the distance from the beginning of this region: 1 - 0.167 = 0.833\n *\n * Digital Yellow is hue 60, which puts it at the very beginning of the yellow-into-green region.\n *\n * This means its Red Channel and its Green channel must both be full.\n * Like Citron, the fullness of Digital Yellow's Red channel is inversely proportional to its\n * hueDecimal, which is 0. Therefore Digital Yellow's Red channel has a fullness of 1.\n *\n * @returns array of values reflecting the spread between channels\n *\n * Digital Red    case 0:  [   R ===== 1       G = x = 0.000   B ===== 0      ]\n *\n * Sunlight       case 0:  [   R ===== 1       G = x = 0.833   B ===== 0      ]\n *\n * DigitalYellow  case 1:  [   R = y = 1.000   G ===== 1       B ===== 0      ]\n *\n * Citron         case 1:  [   R = y = 0.833   G ===== 1       B ===== 0      ]\n *\n * Turquoise      case 2:  [   R ===== 0       G ===== 1       B = x = 0.500  ]\n *\n * here we see detailed breakdowns of the function's final output for our running examples.\n */\n/* eslint-enable max-len */\nexport default (hue: Degree): [r: Fraction, g: Fraction, b: Fraction] => {\n  hue = wrapAround(hue, [0, 360])\n  const hueReduced = hue / 60\n  const hueInteger = Math.floor(hueReduced)\n  const hueDecimal = hueReduced - hueInteger\n  const x = hueDecimal\n  const y = 1 - hueDecimal\n  switch (hueInteger) {\n    /* eslint-disable prettier/prettier */\n    case 0: return [1, x, 0]\n    case 1: return [y, 1, 0]\n    case 2: return [0, 1, x]\n    case 3: return [0, y, 1]\n    case 4: return [x, 0, 1]\n    case 5: return [1, 0, y]\n    default: throw new Error(`invalid hue served: ${hue}`)\n    /* eslint-enable prettier/prettier */\n  }\n}\n", "import type { ChannelObject } from \"~\"\n\nconst hueFromChannels = ({ R, G, B }: ChannelObject): number => {\n  let hue = 0\n  if (R > G && G >= B) hue = 60 * (0 + (G - B) / (R - B))\n  if (G >= R && R > B) hue = 60 * (2 - (R - B) / (G - B))\n  if (G > B && B >= R) hue = 60 * (2 + (B - R) / (G - R))\n  if (B >= G && G > R) hue = 60 * (4 - (G - R) / (B - R))\n  if (B > R && R >= G) hue = 60 * (4 + (R - G) / (B - G))\n  if (R >= B && B > G) hue = 60 * (6 - (B - G) / (R - G))\n  return hue\n}\n\nexport default hueFromChannels\n", "import type { ChannelObject } from \"~\"\n\nimport { CHANNEL_SPECIFIC_LUM } from \"../constants\"\n\nconst lumFromChannels = ({ R, G, B }: ChannelObject): number => {\n  const lum =\n    (CHANNEL_SPECIFIC_LUM.R * R) / 255 +\n    (CHANNEL_SPECIFIC_LUM.G * G) / 255 +\n    (CHANNEL_SPECIFIC_LUM.B * B) / 255\n  // console.log('||| found lum', lum)\n  return lum\n}\n\nexport default lumFromChannels\n", "import type { Filter, Degree } from \"~\"\n\nimport { wrapAround } from \"../utils\"\n\nexport default (hue: Degree, filter: Filter): number => {\n  // 430\n  let maxSat = 255\n  const hueWrapped = wrapAround(hue, [0, 360]) // 70\n  for (let a = -1, b = 0; b < filter.length; a++, b++) {\n    a = wrapAround(a, [0, filter.length])\n    // console.log('||| a =', a, 'b =', b)\n    const hueDoubleWrapped =\n      a > b ? wrapAround(hueWrapped, [-180, 180]) : undefined // undef\n    const tuningPointA = filter[a]\n    const tuningPointB = filter[b]\n    const hueA =\n      a > b ? wrapAround(tuningPointA.hue, [-180, 180]) : tuningPointA.hue\n    const hueB = tuningPointB.hue\n    if (\n      (hueDoubleWrapped || hueWrapped) >= hueA &&\n      (hueDoubleWrapped || hueWrapped) < hueB\n    ) {\n      // console.log(\n      //   '||| hue', hue, 'between', tuningPointA.hue, 'and', tuningPointB.hue\n      // )\n      let $ = hueDoubleWrapped || hueWrapped // 70\n      $ -= hueA // 70 - 50 = 20 //\n      $ /= hueB - hueA // 20 / (120 - 50) = 2/7\n      $ *= tuningPointB.sat - tuningPointA.sat // -128 * 2 / 7 = -256 / 7 ~= -37\n      $ += tuningPointA.sat\n      Math.round($)\n      // console.log('||| _', _)\n      maxSat = $\n    }\n  }\n  // console.log('--- maxSat', maxSat)\n  return maxSat\n}\n", "import type { ChannelObject } from \"~\"\n\nconst satFromChannels = ({ R, G, B }: ChannelObject): number => {\n  const sat = Math.max(R, G, B) - Math.min(R, G, B)\n  // console.log('||| found sat', sat)\n  return sat\n}\n\nexport default satFromChannels\n", "import { CHANNEL_SPECIFIC_LUM } from \"../constants\"\nimport hueToRelativeChannels from \"../import/hueToRelativeChannels\"\n\nexport default (hue: number): number => {\n  const [factorR, factorG, factorB] = hueToRelativeChannels(hue)\n\n  const lumR = CHANNEL_SPECIFIC_LUM.R * factorR\n  const lumG = CHANNEL_SPECIFIC_LUM.G * factorG\n  const lumB = CHANNEL_SPECIFIC_LUM.B * factorB\n\n  const specificLum = lumR + lumG + lumB\n\n  return specificLum\n}\n", "import type {\n  ChannelObject,\n  Degree,\n  Filter,\n  Fraction,\n  LuumSpec,\n  OutOf255,\n  Range,\n} from \"~\"\n\nimport { unfiltered } from \"../constants/filters\"\nimport hueToRelativeChannels from \"../import/hueToRelativeChannels\"\nimport {\n  lumFromChannels,\n  specificLumFromHue,\n  maxSatForHueInFilter,\n} from \"../solveFor\"\nimport { clamp } from \"../utils\"\n\nconst minChannelsForSaturationFromHue = (hue: Degree) => {\n  const relativeChannels = hueToRelativeChannels(hue)\n  const channelSpreader = (trueSaturation: OutOf255): ChannelObject => {\n    const makeMinChannel = (idx: number) =>\n      Math.round(relativeChannels[idx] * trueSaturation)\n    return {\n      R: makeMinChannel(0),\n      G: makeMinChannel(1),\n      B: makeMinChannel(2),\n    }\n  }\n  return channelSpreader\n}\n\ntype IlluminationObj = {\n  minChannels: ChannelObject\n  trueLuminosity: number\n  minLum: number\n}\n\nconst channelsFromIlluminationObj = ({\n  minChannels,\n  trueLuminosity,\n  minLum,\n}: IlluminationObj): ChannelObject => {\n  const { max, round } = Math\n  const maxWhite = 255 - max(...Object.values(minChannels))\n  const white = clamp(round((trueLuminosity - minLum) * 255), [0, maxWhite])\n  const channels = {\n    R: minChannels.R + white,\n    G: minChannels.G + white,\n    B: minChannels.B + white,\n  }\n  return channels\n}\n\ntype SpecToChannelsFixLimit = (\n  spec: LuumSpec,\n  filter?: Filter\n) => {\n  channels: ChannelObject\n  fix: { sat: number; lum: number }\n  limit: { sat: Range; lum: Range }\n}\n\nconst specToChannelsFixLimit: SpecToChannelsFixLimit = (\n  { hue, sat, lum, prefer = `lum` },\n  filter = unfiltered\n) => {\n  const minChannelsForSaturation = minChannelsForSaturationFromHue(hue)\n\n  let trueSaturation: OutOf255\n  let trueLuminosity: Fraction\n  let minChannels: ChannelObject\n  let maxChannels: ChannelObject\n  let specificLum: Fraction\n  let minLum = 0\n  let maxLum = 1\n  let maxSat = maxSatForHueInFilter(hue, filter)\n\n  switch (prefer) {\n    case `sat`:\n      trueSaturation = clamp(Math.min(sat, maxSat), [0, 255])\n      minChannels = minChannelsForSaturation(trueSaturation)\n      maxChannels = {\n        R: minChannels.R + 255 - trueSaturation,\n        G: minChannels.G + 255 - trueSaturation,\n        B: minChannels.B + 255 - trueSaturation,\n      }\n      minLum = lumFromChannels(minChannels)\n      maxLum = lumFromChannels(maxChannels)\n      trueLuminosity = clamp(lum, [minLum, maxLum])\n\n      break\n    case `lum`:\n      trueLuminosity = clamp(lum, [0, 1])\n      specificLum = specificLumFromHue(hue)\n      maxSat = Math.min(\n        maxSat,\n        Math.round(\n          trueLuminosity <= specificLum\n            ? 255 * (trueLuminosity / specificLum)\n            : (255 * (1 - trueLuminosity)) / (1 - specificLum)\n        )\n      )\n      trueSaturation = Math.min(sat, maxSat)\n      minChannels = minChannelsForSaturation(trueSaturation)\n      minLum = lumFromChannels(minChannels)\n      break\n  }\n\n  const channels = channelsFromIlluminationObj({\n    minChannels,\n    trueLuminosity,\n    minLum,\n  })\n\n  return {\n    channels,\n    fix: {\n      sat: trueSaturation,\n      lum: trueLuminosity,\n    },\n    limit: {\n      sat: [0, maxSat],\n      lum: [prefer === `lum` ? 0 : minLum, maxLum],\n    },\n  }\n}\n\nexport default specToChannelsFixLimit\n", "import type { Filter, Hex, LuumFix, LuumLimit, LuumSpec } from \"~\"\n\nimport channelsToHex from \"./channelsToHex\"\nimport specToChannels from \"./specToChannelsFixLimit\"\n\ntype SpecToHexFixLimit = (\n  spec: LuumSpec,\n  filter?: Filter\n) => {\n  hex: Hex\n  fix: LuumFix\n  limit: LuumLimit\n}\n\nconst specToHexFixLimit: SpecToHexFixLimit = (\n  { hue, sat, lum, prefer },\n  filter\n) => {\n  const { channels, fix, limit } = specToChannels(\n    {\n      hue,\n      sat,\n      lum,\n      prefer,\n    },\n    filter\n  )\n  const { R, G, B } = channels\n  const hex = channelsToHex({ R, G, B })\n\n  // console.log('--- newHex', hex)\n\n  return { hex, fix, limit }\n}\n\nexport default specToHexFixLimit\n", "import type { Filter, Hex, LuumSpec } from \"~\"\n\nimport specToHexFixLimit from \"./specToHexFixLimit\"\n\nconst specToHex = (\n  { hue, sat, lum, prefer }: LuumSpec,\n  filter?: Filter\n): Hex => {\n  const { hex } = specToHexFixLimit({ hue, sat, lum, prefer }, filter)\n  return hex\n}\n\nexport default specToHex\n", "import type { Degree } from \"~\"\n\nimport { wrapAround } from \"../utils\"\n\ntype NamingPoint = { hue: Degree; name: string }\n\nconst rangeNames: NamingPoint[] = [\n  { hue: 20, name: `red` },\n  { hue: 45, name: `orange` },\n  { hue: 61, name: `yellow` },\n  { hue: 80, name: `citron` },\n  { hue: 100, name: `lime` },\n  { hue: 150, name: `green` },\n  { hue: 180, name: `teal` },\n  { hue: 200, name: `cyan` },\n  { hue: 240, name: `blue` },\n  { hue: 270, name: `indigo` },\n  { hue: 300, name: `violet` },\n  { hue: 330, name: `magenta` },\n  { hue: 350, name: `pink` },\n]\n\nconst identifyHue = (hue: Degree): string => {\n  // console.log('||| hue', hue)\n  const hueWrapped = wrapAround(hue, [0, 360])\n  const { name } =\n    rangeNames.find(({ hue }) => hueWrapped >= hue) || rangeNames[0]\n  /*\n      console.log('||| hue', hue,\n        'is between', namingPointA.hue,\n        'and', namingPointB.hue,\n        'therefore it is named', namingPointA.name)\n      */\n  return name\n}\n\nexport { identifyHue }\n", "import type { ChannelObject, HSL } from \"~\"\n\nimport { hueFromChannels, satFromChannels, lumFromChannels } from \"../solveFor\"\n\nconst channelsToSpec = ({ R, G, B }: ChannelObject): HSL => {\n  const hue = hueFromChannels({ R, G, B })\n  const sat = satFromChannels({ R, G, B })\n  const lum = lumFromChannels({ R, G, B })\n  return { hue, sat, lum }\n}\n\nexport default channelsToSpec\n", "import type { Hex } from \"~\"\n\nconst BASE_16_CHAR_SET = `[a-fA-F0-9]+`\n\nconst miniHexToHex = (miniHex: string): Hex => {\n  const miniHexArray = miniHex.split(``)\n  const hexTemplate = [0, 0, 1, 1, 2, 2]\n  return hexTemplate.map((idx) => miniHexArray[idx]).join(``)\n}\n\nconst normalizeHex = (maybeHex: string): Hex => {\n  const hex = maybeHex.replace(/^#/, ``)\n  const hexIsCorrectLength = hex.length === 6 || hex.length === 3\n  const hexIsCorrectCharSet =\n    hex.match(new RegExp(`^${BASE_16_CHAR_SET}$`)) !== null\n  const hexIsValid = hexIsCorrectLength && hexIsCorrectCharSet\n  if (!hexIsValid) {\n    throw new Error(`${maybeHex} is not a valid hex code`)\n  }\n  if (hex.length === 3) {\n    return miniHexToHex(hex)\n  }\n  return hex\n}\n\nexport default normalizeHex\n", "import type { ChannelObject } from \"~\"\n\nimport normalizeHex from \"./normalizeHex\"\n\nexport default (maybeHex: string): ChannelObject => {\n  const hex = normalizeHex(maybeHex)\n  const getHexcodeChannel = (nameOfChannel: `b` | `g` | `r`) => {\n    switch (nameOfChannel) {\n      /* eslint-disable prettier/prettier */\n      case `r`: return hex.slice(0, 2)\n      case `g`: return hex.slice(2, 4)\n      case `b`: return hex.slice(4, 6)\n      default: throw new Error(`strange channel name`)\n      /* eslint-enable prettier/prettier */\n    }\n  }\n  const rBase10 = parseInt(getHexcodeChannel(`r`), 16)\n  const gBase10 = parseInt(getHexcodeChannel(`g`), 16)\n  const bBase10 = parseInt(getHexcodeChannel(`b`), 16)\n\n  return {\n    R: rBase10,\n    G: gBase10,\n    B: bBase10,\n  }\n}\n", "import type { HSL } from \"~\"\n\nimport channelsToSpec from \"./channelsToSpec\"\nimport hexToChannels from \"./hexToChannels\"\n\nconst hexToSpec = (hex: string): HSL => {\n  const { R, G, B } = hexToChannels(hex)\n  /*\n  console.log('+++ input hex', hex)\n  console.log('||| R', R)\n  console.log('||| G', G)\n  console.log('||| B', B)\n  */\n  const { hue, sat, lum } = channelsToSpec({ R, G, B })\n  return { hue, sat, lum }\n}\n\nexport default hexToSpec\n", "import { pipe } from \"fp-ts/lib/function\"\n\nimport { specToHex } from \"~\"\nimport type { Filter, LuumSpec, FilterPoint } from \"~\"\n\nimport { defaultSpec } from \"~/constants/spec\"\nimport type { Transformer } from \"~/mixers/lum\"\nimport { shade } from \"~/mixers/lum\"\n\n// export * from \"./export\"\n// export * from \"./import\"\n\n/* eslint-disable max-lines */\n\n// export type InteractiveStates = `active` | `base` | `disabled` | `hover`\n\n// export const HTML_ELEMENT_NAMES = [\n//   `a`,\n//   `abbr`,\n//   `address`,\n//   `area`,\n//   `article`,\n//   `aside`,\n//   `audio`,\n//   `b`,\n//   `base`,\n//   `bdi`,\n//   `bdo`,\n//   `big`,\n//   `blockquote`,\n//   `body`,\n//   `br`,\n//   `button`,\n//   `canvas`,\n//   `caption`,\n//   `cite`,\n//   `code`,\n//   `col`,\n//   `colgroup`,\n//   `data`,\n//   `datalist`,\n//   `dd`,\n//   `del`,\n//   `details`,\n//   `dfn`,\n//   `dialog`,\n//   `div`,\n//   `dl`,\n//   `dt`,\n//   `em`,\n//   `embed`,\n//   `fieldset`,\n//   `figcaption`,\n//   `figure`,\n//   `footer`,\n//   `form`,\n//   `h1`,\n//   `h2`,\n//   `h3`,\n//   `h4`,\n//   `h5`,\n//   `h6`,\n//   `head`,\n//   `header`,\n//   `hgroup`,\n//   `hr`,\n//   `html`,\n//   `i`,\n//   `iframe`,\n//   `img`,\n//   `input`,\n//   `ins`,\n//   `kbd`,\n//   `keygen`,\n//   `label`,\n//   `legend`,\n//   `li`,\n//   `link`,\n//   `main`,\n//   `map`,\n//   `mark`,\n//   `menu`,\n//   `menuitem`,\n//   `meta`,\n//   `meter`,\n//   `nav`,\n//   `noscript`,\n//   `object`,\n//   `ol`,\n//   `optgroup`,\n//   `option`,\n//   `output`,\n//   `p`,\n//   `param`,\n//   `picture`,\n//   `pre`,\n//   `progress`,\n//   `q`,\n//   `rp`,\n//   `rt`,\n//   `ruby`,\n//   `s`,\n//   `samp`,\n//   `script`,\n//   `section`,\n//   `select`,\n//   `small`,\n//   `source`,\n//   `span`,\n//   `strong`,\n//   `style`,\n//   `sub`,\n//   `summary`,\n//   `sup`,\n//   `table`,\n//   `tbody`,\n//   `td`,\n//   `textarea`,\n//   `tfoot`,\n//   `th`,\n//   `thead`,\n//   `time`,\n//   `title`,\n//   `tr`,\n//   `track`,\n//   `u`,\n//   `ul`,\n//   `var`,\n//   `video`,\n//   `wbr`,\n// ] as const\n\n// export type HTMLElementName = typeof HTML_ELEMENT_NAMES[number]\n\n// export type UniversalSelector = `*`\n\n// export type TypeSelector = HTMLElementName | `body` | `html`\n\n// export type ClassSelector = `.${string}`\n\n// export type IdSelector = `#${string}`\n\n// export type ParentSelector = `&`\n\n// export type AttributeSelector = `[\"${string}\"=\"${string}\"]`\n\n// export type CssSelectorCore =\n//   | AttributeSelector\n//   | ClassSelector\n//   | IdSelector\n//   | ParentSelector\n//   | TypeSelector\n//   | UniversalSelector\n\n// export type CssCombinator = ` ` | ` + ` | ` > ` | ` ~ `\n\nexport const CSS_PSEUDO_CLASSES = [\n  `:active`,\n  `:checked`,\n  `:disabled`,\n  `:enabled`,\n  `:focus`,\n  `:hover`,\n  `:indeterminate`,\n  `:visited`,\n] as const\n\nexport type CssPseudoClass = typeof CSS_PSEUDO_CLASSES[number]\n\nexport const isCssPseudoClass = (s: unknown): s is CssPseudoClass =>\n  CSS_PSEUDO_CLASSES.includes(s as CssPseudoClass)\n\n// export type CssPseudoElement =\n//   | `::after`\n//   | `::backdrop`\n//   | `::before`\n//   | `::first-letter`\n//   | `::first-line`\n//   | `::placeholder`\n//   | `::selection`\n\n// export type CssSelectorExtension =\n//   | AttributeSelector\n//   | ClassSelector\n//   | CssPseudoClass\n//   | CssPseudoElement\n//   | `${CssCombinator}${CssSelectorCore}`\n\n// export type CssSelector =\n//   | CssSelectorCore\n//   | `${CssSelectorCore}${CssSelectorExtension}`\n\nexport const CSS_COLOR_PROPERTY_KEYS = [\n  `background-color`,\n  `background`,\n  `border-bottom-color`,\n  `border-color`,\n  `border-left-color`,\n  `border-right-color`,\n  `border-top-color`,\n  `border`,\n  `box-shadow`,\n  `caret-color`,\n  `color`,\n  `column-rule-color`,\n  `column-rule`,\n  `filter`,\n  `opacity`,\n  `outline-color`,\n  `outline`,\n  `text-decoration-color`,\n  `text-decoration`,\n  `text-shadow`,\n] as const\n\nexport type CssColorPropertyKey =\n  | typeof CSS_COLOR_PROPERTY_KEYS[number]\n  | `--${string}`\n\nexport const isCssColorPropertyKey = (\n  input: unknown\n): input is CssColorPropertyKey =>\n  typeof input === `string` &&\n  (CSS_COLOR_PROPERTY_KEYS.includes(\n    input as typeof CSS_COLOR_PROPERTY_KEYS[number]\n  ) ||\n    input.startsWith(`--`))\n\nexport type Validator<T> = (input: unknown) => input is T\n\nexport const isString = (input: unknown): input is string =>\n  typeof input === `string`\n\nexport const isUndefined = (input: unknown): input is undefined =>\n  typeof input === `undefined`\n\nexport const isArrayWhereEveryElement =\n  <T>(isType: Validator<T>) =>\n  (input: unknown): input is T[] =>\n    Array.isArray(input) && input.every((item) => isType(item))\n\nexport const content =\n  <T>(isType: Validator<T>) =>\n  (input: unknown): input is T | T[] =>\n    isType(input) || isArrayWhereEveryElement(isType)(input)\n\nexport const maybeIsOrContainsOnly =\n  <T>(isType: Validator<T>) =>\n  (input: unknown): input is T | T[] | undefined =>\n    isUndefined(input) || content(isType)(input)\n\nexport type OneOrMany<T> = T | T[]\n\nexport const isTransformer =\n  <T>(validate: Validator<T>) =>\n  (sample: T): Validator<Transformer<T>> => {\n    const sampleIsValid = validate(sample)\n    if (!sampleIsValid) {\n      throw new Error(`Invalid test case: JSON.stringify(${sample})`)\n    }\n    return (input: unknown): input is Transformer<T> => {\n      if (typeof input !== `function`) return false\n      const testResult = input(sample)\n      return validate(testResult)\n    }\n  }\n\nexport const isFilterPoint = (input: unknown): input is FilterPoint =>\n  typeof input === `object` &&\n  typeof (input as FilterPoint).hue === `number` &&\n  typeof (input as FilterPoint).sat === `number`\n\nexport const isFilter = (input: unknown): input is Filter =>\n  isArrayWhereEveryElement(isFilterPoint)(input)\n\nexport const maybe =\n  <T>(validate: Validator<T>) =>\n  (input: unknown): input is T | undefined =>\n    isUndefined(input) || validate(input)\n\nexport const isLuumSpec = (input: unknown): input is LuumSpec =>\n  typeof input === `object` &&\n  input !== null &&\n  typeof (input as LuumSpec).hue === `number` &&\n  typeof (input as LuumSpec).sat === `number` &&\n  typeof (input as LuumSpec).lum === `number` &&\n  [`sat`, `lum`].includes((input as LuumSpec).prefer)\n\nexport const isLuumSpecTransformer = isTransformer(isLuumSpec)(defaultSpec)\n\nexport type LuumCssAttribute = [\n  keys: OneOrMany<CssColorPropertyKey>,\n  transformers: OneOrMany<Transformer<LuumSpec>>\n]\nexport const isLuumCssAttribute = (input: unknown): input is LuumCssAttribute =>\n  Array.isArray(input) &&\n  input.length === 2 &&\n  content(isCssColorPropertyKey)(input[0]) &&\n  content(isLuumSpecTransformer)(input[1])\n\nexport type LuumScssPseudoClassRule = [\n  selectors: OneOrMany<CssPseudoClass>,\n  attributes: OneOrMany<LuumCssAttribute>\n]\n\nexport const isLuumScssPseudoClassRule = (\n  input: unknown\n): input is LuumScssPseudoClassRule =>\n  input instanceof Array &&\n  input.length === 2 &&\n  content(isCssPseudoClass)(input[0]) &&\n  content(isLuumCssAttribute)(input[1])\n\nexport type LuumScssNestedRule = [\n  selectors: OneOrMany<string>,\n  attributes: OneOrMany<LuumCssAttribute>\n]\n\nexport const isLuumScssNestedRule = (\n  input: unknown\n): input is LuumScssNestedRule =>\n  input instanceof Array &&\n  input.length === 2 &&\n  content(isString)(input[0]) &&\n  content(isLuumCssAttribute)(input[1])\n\nexport type LuumCssRule = {\n  rootSelectors?: OneOrMany<string>\n  root: LuumSpec\n  attributes: OneOrMany<LuumCssAttribute>\n  filter?: Filter\n}\n\nexport const key =\n  <T = any>(k: keyof T) =>\n  (obj: Exclude<object, null>): unknown =>\n    (obj as Record<keyof any, any>)[k]\n\nexport const isLuumCssRule = (input: unknown): input is LuumCssRule =>\n  typeof input === `object` &&\n  input !== null &&\n  isLuumSpec((input as LuumCssRule).root) &&\n  content(isLuumCssAttribute)(key<LuumCssRule>(`attributes`)(input)) &&\n  maybe(content(isString))(key<LuumCssRule>(`rootSelectors`)(input)) &&\n  maybe(isFilter)(key<LuumCssRule>(`filter`)(input))\n\nexport type LuumScssRule = LuumCssRule & {\n  states?: OneOrMany<LuumScssPseudoClassRule>\n  children?: OneOrMany<LuumScssNestedRule>\n}\n\nexport const isLuumScssRule = (input: unknown): input is LuumScssRule =>\n  isLuumCssRule(input) &&\n  maybe(content(isLuumScssPseudoClassRule))(\n    key<LuumScssRule>(`states`)(input)\n  ) &&\n  maybe(content(isLuumScssNestedRule))(key<LuumScssRule>(`children`)(input))\n\nexport const RED: LuumSpec = {\n  hue: 0,\n  sat: 255,\n  lum: 50,\n  prefer: `sat`,\n}\n\nexport const PAINT_MY_WAGON_RED: LuumScssRule = {\n  rootSelectors: [`.wagon`],\n  root: RED,\n  attributes: [`background-color`, shade(5)],\n  states: [\n    [\n      [`:hover`, `:focus`],\n      [`background-color`, shade(10)],\n    ],\n    [`:active`, [`background-color`, shade(15)]],\n  ],\n}\n\nexport const eachArrayElement =\n  <T>(isType: Validator<T>) =>\n  (input: unknown): T[] =>\n    isType(input) ? [input] : Array.isArray(input) ? input.filter(isType) : []\n\nconst LF = `\\n`\n\nconst join = (separator?: string) => (a: string[]) => a.join(separator)\nconst map =\n  <I, O>(f: (input: I) => O) =>\n  (a: I[]) =>\n    a.map(f)\n\nexport const luumToCss = (rule: LuumCssRule): string => {\n  const {\n    attributes: oneOrManyAttributes,\n    root,\n    rootSelectors: maybeOneOrManyRootSelectors,\n    filter: maybeFilter,\n  } = rule\n  const rootSelectors = pipe(\n    maybeOneOrManyRootSelectors,\n    eachArrayElement(isString),\n    join(`, ` + LF),\n    (s) => (s ? s + ` {` + LF : ``)\n  )\n  const attributes = pipe(\n    oneOrManyAttributes,\n    eachArrayElement(isLuumCssAttribute),\n    map(([oneOrManyKeys, oneOrManyTransformers]) => {\n      const transformers = eachArrayElement(isLuumSpecTransformer)(\n        oneOrManyTransformers\n      )\n      const transformedSpec = transformers.reduce(\n        (acc, transformer) => transformer(acc),\n        root\n      )\n      const hex = specToHex(transformedSpec, maybeFilter)\n      return pipe(\n        oneOrManyKeys,\n        eachArrayElement(isCssColorPropertyKey),\n        map((key) => `${key}: ${hex}`),\n        join(`; ` + LF)\n      )\n    }),\n    join(`; ` + LF)\n  )\n  return rootSelectors ? join(LF)([rootSelectors, attributes, `}`]) : attributes\n}\n\nexport const luumToScss = (rule: LuumScssRule): string => {\n  const {\n    rootSelectors: maybeOneOrManyRootSelectors,\n    root,\n    attributes: oneOrManyAttributes,\n    filter,\n    states: maybeOneOrManyStates,\n    children: maybeOneOrManyChildren,\n  } = rule\n  const rootSelectors = pipe(\n    maybeOneOrManyRootSelectors,\n    eachArrayElement(isString),\n    join(`, ` + LF)\n  )\n  return ``\n}\n\n// export const luumToScss = (rule: LuumScssRule): string => {\n//   const { rootSelector, root, filter, attributes, states, children } = rule\n//   let scss = ``\n//   const depth = 0\n//   if (rootSelector) scss += `${rootSelector} {`\n//   return ``\n// }\n", "import type { LuumSpec } from \"~\"\n\nexport const defaultSpec: LuumSpec = {\n  hue: 0,\n  lum: 0,\n  sat: 0,\n  prefer: `lum`,\n}\n", "import { pipe } from \"fp-ts/lib/function\"\n\nimport type { LuumSpec } from \"~\"\n\nexport const clampInto =\n  ([min, max]: [number, number]) =>\n  (value: number): number =>\n    value > max ? max : value < min ? min : value\nexport type Transformer<Anything> = (thing: Anything) => Anything\n\n/* eslint-disable prettier/prettier */\nexport const apply =\n\n  <T>(nextVersionOfThing: T | Transformer<T>): ((originalThing: T) => T) =>\n\n  (originalThing) =>\n    nextVersionOfThing instanceof Function\n      ? nextVersionOfThing(originalThing)\n      : nextVersionOfThing\n/* eslint-enable prettier/prettier */\n\nexport type Applicator<X, Y> = (next: X | ((prev: X) => X)) => Transformer<Y>\n\nexport type LuumApplicator<X> = Applicator<X, LuumSpec>\n\nexport type SetLum = LuumApplicator<number>\n\nexport const setLum: SetLum = (newLum) => (currentColor) => ({\n  ...currentColor,\n  lum: pipe(currentColor.lum, apply(newLum), clampInto([0, 1])),\n})\n\nexport type TransformerCreator<X, Y> = (seed: X) => Transformer<Y>\n\nexport const tint =\n  (tintAmount: number) =>\n  (color: LuumSpec): LuumSpec =>\n    setLum((lum) => (lum * 100 + tintAmount) / 100)(color)\n\nexport const shade =\n  (shadeAmount: number) =>\n  (color: LuumSpec): LuumSpec =>\n    setLum((lum) => (lum * 100 - shadeAmount) / 100)(color)\n"],
  "mappings": "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",
  "names": []
}
